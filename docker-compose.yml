version: '3.7'
services:
  api:
    build: .
    image: tarpaulin-api
    restart: always
    ports:
      - 8000:8000
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MONGO_INITDB_DATABASE: tarpaulin
      MONGO_HOST: mongodb
      REDIS_HOST: redis-server
      MONGO_DB_NAME: ${MONGO_DB_NAME}
      MONGO_DATABASE: ${MONGO_DATABASE}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}

  mysql:
    image: mysql:5
    restart: always
    volumes:
      - mysql-data:/var/lib/mysql
      - ./db-init/02-db-init.sql:/docker-entrypoint-initdb.d/02-db-init.sql

    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  redis-server:
    image: redis:latest
    restart: always

  mongodb:
    image: mongo:latest
    restart: always
    volumes:
      - mongo-data:/data/db
      - ./db-init/01-db.init.js:/docker-entrypoint-initdb.d/
      - ./db-init/00-create-user.sh:/docker-entrypoint-initdb.d/00-create-user.sh
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}


volumes:
  mysql-data:
    name: tarpaulin-mysql-data
  mongo-data:
    name: tarpaulin-mongodb-data
